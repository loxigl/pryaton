from telegram import Update
from telegram.ext import ContextTypes, MessageHandler, filters
from loguru import logger

from src.services.user_service import UserService

from src.handlers.games import games_command, my_games_command
from src.handlers.admin import admin_command
from src.handlers.monitoring import monitoring_command
from src.handlers.scheduler_admin import scheduler_monitor_command
from src.handlers.contextual_actions import (
    handle_my_game_button,
    handle_game_status_button, 
    handle_send_location_button,
    handle_game_results_button
)
from src.keyboards.reply import get_contextual_main_keyboard

async def show_monitoring_basic(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ë–∞–∑–æ–≤–æ–µ –º–µ–Ω—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–µ–∑ ConversationHandler"""
    try:
        from src.services.monitoring_service import MonitoringService
        from telegram import InlineKeyboardButton, InlineKeyboardMarkup
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = MonitoringService.get_active_games_stats()
        
        stats_text = (
            f"üìä <b>–ú–û–ù–ò–¢–û–†–ò–ù–ì –°–ò–°–¢–ï–ú–´</b>\n\n"
            f"üéÆ <b>–ê–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä—ã:</b> {stats.get('active_games_count', 0)}\n"
            f"üìÖ <b>–ò–≥—Ä—ã —Å–µ–≥–æ–¥–Ω—è:</b> {stats.get('today_games_count', 0)}\n"
            f"üë• <b>–í—Å–µ–≥–æ —É—á–∞—Å—Ç–∏–π:</b> {stats.get('total_participants', 0)}\n"
            f"üë§ <b>–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤:</b> {stats.get('unique_players', 0)}\n\n"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º –∏–≥—Ä
        games_by_status = stats.get('games_by_status', {})
        if games_by_status:
            stats_text += f"üìà <b>–ò–≥—Ä—ã –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º:</b>\n"
            status_names = {
                'recruiting': 'üìù –ù–∞–±–æ—Ä',
                'upcoming': '‚è∞ –°–∫–æ—Ä–æ',
                'in_progress': 'üéÆ –í –ø—Ä–æ—Ü–µ—Å—Å–µ',
                'completed': '‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω—ã',
                'canceled': '‚ùå –û—Ç–º–µ–Ω–µ–Ω—ã'
            }
            
            for status, count in games_by_status.items():
                status_name = status_names.get(status, status)
                stats_text += f"‚Ä¢ {status_name}: {count}\n"
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = [
            [InlineKeyboardButton("üéÆ –ê–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä—ã", callback_data="mon_active_games")],
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–æ–≤", callback_data="mon_player_stats")],
            [InlineKeyboardButton("üó∫ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–π–æ–Ω–æ–≤", callback_data="mon_district_stats")],
            [InlineKeyboardButton("üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", callback_data="mon_recent_activities")],
            [InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="mon_refresh")],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mon_exit")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            stats_text,
            parse_mode="HTML",
            reply_markup=reply_markup
        )
        
    except Exception as e:
        await update.message.reply_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}",
            reply_markup=get_contextual_main_keyboard(update.effective_user.id)
        )

async def handle_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    text = update.message.text
    user_id = update.effective_user.id
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: '{text}'")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    if text == "üéÆ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã" or text == "üé≤ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã":
        logger.info(f"–í—ã–∑—ã–≤–∞–µ–º games_command –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await games_command(update, context)
    elif text == "üéØ –ú–æ–∏ –∏–≥—Ä—ã" or text == "üéØ –í—Å–µ –º–æ–∏ –∏–≥—Ä—ã":
        logger.info(f"–í—ã–∑—ã–≤–∞–µ–º my_games_command –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await my_games_command(update, context)
    elif text == "üéÆ –ú–æ—è –∏–≥—Ä–∞":
        logger.info(f"–í—ã–∑—ã–≤–∞–µ–º handle_my_game_button –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await handle_my_game_button(update, context)
    elif text == "üìä –ú–æ—è –∏–≥—Ä–∞" or text == "üéÆ –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã":
        logger.info(f"–í—ã–∑—ã–≤–∞–µ–º handle_game_status_button –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await handle_game_status_button(update, context)
    elif text in ["üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é", "üìç –ú–æ—è –ø–æ–∑–∏—Ü–∏—è"]:
        logger.info(f"–í—ã–∑—ã–≤–∞–µ–º handle_send_location_button –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await handle_send_location_button(update, context)
    elif text == "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã":
        logger.info(f"–í—ã–∑—ã–≤–∞–µ–º handle_game_results_button –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await handle_game_results_button(update, context)
    elif text == "üéÆ –ù–æ–≤—ã–µ –∏–≥—Ä—ã":
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã
        logger.info(f"–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ games_command –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await games_command(update, context)
    elif text == "üîë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å":
        logger.info(f"–í—ã–∑—ã–≤–∞–µ–º admin_command –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await admin_command(update, context)
    elif text == "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        if not UserService.is_admin(user_id):
            logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥—É –±–µ–∑ –ø—Ä–∞–≤")
            await update.message.reply_text(
                "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.",
                reply_markup=get_contextual_main_keyboard(user_id)
            )
            return
        
        logger.info(f"–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –∞–¥–º–∏–Ω–∞ {user_id}")
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤–æ–µ –º–µ–Ω—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        await show_monitoring_basic(update, context)
    elif text == "üìÖ –°–æ–±—ã—Ç–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
        if not UserService.is_admin(user_id):
            logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –±–µ–∑ –ø—Ä–∞–≤")
            await update.message.reply_text(
                "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.",
                reply_markup=get_contextual_main_keyboard(user_id)
            )
            return
        
        logger.info(f"–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞ {user_id}")
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
        await scheduler_monitor_command(update, context)
    elif text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å":
        logger.info(f"–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await show_profile(update, context)
    elif text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å" or text == "‚ÑπÔ∏è –ü—Ä–∞–≤–∏–ª–∞":
        logger.info(f"–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–º–æ—â—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await show_help(update, context)
    elif text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        logger.info(f"–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        welcome_text = "üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        await update.message.reply_text(
            welcome_text,
            reply_markup=get_contextual_main_keyboard(user_id),
            parse_mode="HTML"
        )
    elif text.startswith("‚è∞"):
        # –≠—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∏–≥—Ä—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏
        logger.info(f"–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∏–≥—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await handle_my_game_button(update, context)
    elif text in ["‚è∞ –û–∂–∏–¥–∞–Ω–∏–µ —Ä–æ–ª–∏", "‚è∞ –û–∂–∏–¥–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞"]:
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã
        logger.info(f"–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await handle_game_status_button(update, context)
    elif text in ["üì∏ –§–æ—Ç–æ –º–µ—Å—Ç–∞", "üì∏ –§–æ—Ç–æ –Ω–∞—Ö–æ–¥–∫–∏"]:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π - –ø–æ–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        await update.message.reply_text(
            "üì∏ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö",
            reply_markup=get_contextual_main_keyboard(user_id)
        )
    elif text in ["üöó –ú–µ–Ω—è –Ω–∞—à–ª–∏", "üîç –Ø –Ω–∞—à–µ–ª –≤–æ–¥–∏—Ç–µ–ª—è"]:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã - –ø–æ–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        await update.message.reply_text(
            "üèÅ –§—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ inline –∫–Ω–æ–ø–∫–∏ –≤ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–≥—Ä–µ",
            reply_markup=get_contextual_main_keyboard(user_id)
        )
    elif text == "‚ö†Ô∏è –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–º–æ—â–∏ –≤ –∏–≥—Ä–µ
        await show_game_help(update, context)
    elif text == "üèÜ –ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö
        await show_achievements(update, context)
    else:
        # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: '{text}'")
        await update.message.reply_text(
            "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
            reply_markup=get_contextual_main_keyboard(user_id)
        )

async def show_profile(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = update.effective_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user, participations = UserService.get_user_by_telegram_id(user_id)
    
    if not user:
        await update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞",
            reply_markup=get_contextual_main_keyboard(user_id)
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ
    profile_text = (
        f"üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
        f"<b>–ò–º—è:</b> {user.name}\n"
        f"<b>–†–∞–π–æ–Ω:</b> {user.district}\n"
        f"<b>–†–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:</b> {get_role_text(user.default_role)}\n"
    )
    
    if user.phone:
        profile_text += f"<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {user.phone}\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —É—á–∞—Å—Ç–∏—è –≤ –∏–≥—Ä–∞—Ö
    games_count = len(participations)
    profile_text += f"\n<b>–£—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–∞—Ö:</b> {games_count}"
    
    await update.message.reply_text(
        profile_text,
        parse_mode="HTML",
        reply_markup=get_contextual_main_keyboard(user_id)
    )

async def show_help(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞"""
    user_id = update.effective_user.id
    
    help_text = (
        "‚ÑπÔ∏è <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>\n\n"
        "<b>–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
        "üéÆ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã</b> - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏\n"
        "üéØ <b>–ú–æ–∏ –∏–≥—Ä—ã</b> - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à–∏ –∏–≥—Ä—ã\n"
        "üë§ <b>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ\n"
        "üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b> - –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É\n\n"
        
        "<b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:</b>\n"
        "1. –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –∏–≥—Ä—ã —á–µ—Ä–µ–∑ –º–µ–Ω—é '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã'\n"
        "2. –ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã\n"
        "3. –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –∏–≥—Ä–∞—Ö –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏\n"
        "4. –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è\n\n"
        
        "<b>–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é:</b>\n"
        "–ú–µ–Ω—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞:\n"
        "‚Ä¢ –ï—Å–ª–∏ –≤—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –∏–≥—Ä—É - –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ '–ú–æ—è –∏–≥—Ä–∞'\n"
        "‚Ä¢ –í–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã - —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∞—à–µ–π —Ä–æ–ª–∏\n"
        "‚Ä¢ –ü–æ—Å–ª–µ –∏–≥—Ä—ã - –∫–Ω–æ–ø–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π\n\n"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if UserService.is_admin(user_id):
        help_text += (
            "<b>–§—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>\n"
            "üîë <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b> - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–∞–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏\n"
            "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∏–≥—Ä\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–π–æ–Ω–æ–≤ –∏ —Ä–æ–ª–µ–π\n"
        )
    
    await update.message.reply_text(
        help_text,
        parse_mode="HTML",
        reply_markup=get_contextual_main_keyboard(user_id)
    )

async def show_game_help(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–º–æ—â—å –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã"""
    user_id = update.effective_user.id
    
    from src.services.user_context_service import UserContextService
    game_context = UserContextService.get_user_game_context(user_id)
    
    if game_context.status != UserContextService.STATUS_IN_GAME:
        await update.message.reply_text(
            "‚ö†Ô∏è –ü–æ–º–æ—â—å –≤ –∏–≥—Ä–µ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã",
            reply_markup=get_contextual_main_keyboard(user_id)
        )
        return
    
    role_help = ""
    if game_context.participant and game_context.participant.role:
        role = game_context.participant.role.value
        if role == 'driver':
            role_help = (
                "üöó <b>–°–æ–≤–µ—Ç—ã –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª—è:</b>\n"
                "‚Ä¢ –ù–∞–π–¥–∏—Ç–µ —É–∫—Ä–æ–º–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –ø—Ä—è—Ç–∫–∏\n"
                "‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è\n"
                "‚Ä¢ –î–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ –º–µ—Å—Ç–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è\n"
                "‚Ä¢ –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã, –∏—Å–∫–∞—Ç–µ–ª–∏ —É–∂–µ –∏—â—É—Ç!\n\n"
            )
        elif role == 'seeker':
            role_help = (
                "üîç <b>–°–æ–≤–µ—Ç—ã –¥–ª—è –∏—Å–∫–∞—Ç–µ–ª—è:</b>\n"
                "‚Ä¢ –ò–∑—É—á–∏—Ç–µ —Ä–∞–π–æ–Ω –∏–≥—Ä—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ\n"
                "‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏\n"
                "‚Ä¢ –î–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ –Ω–∞—Ö–æ–¥–æ–∫\n"
                "‚Ä¢ –†–∞–±–æ—Ç–∞–π—Ç–µ –≤ –∫–æ–º–∞–Ω–¥–µ —Å –¥—Ä—É–≥–∏–º–∏ –∏—Å–∫–∞—Ç–µ–ª—è–º–∏\n\n"
            )
    
    help_text = (
        f"‚ö†Ô∏è <b>–ü–û–ú–û–©–¨ –í –ò–ì–†–ï</b>\n\n"
        f"{role_help}"
        f"<b>–û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞:</b>\n"
        f"‚Ä¢ –°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è\n"
        f"‚Ä¢ –ë—É–¥—å—Ç–µ –≤–µ–∂–ª–∏–≤—ã —Å –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏\n"
        f"‚Ä¢ –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π\n"
        f"‚Ä¢ –ù–µ –ø–æ–∫–∏–¥–∞–π—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—É—é –∏–≥—Ä–æ–≤—É—é –∑–æ–Ω—É\n\n"
        f"<b>–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏:</b>\n"
        f"–í —Å–ª—É—á–∞–µ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."
    )
    
    await update.message.reply_text(
        help_text,
        parse_mode="HTML",
        reply_markup=get_contextual_main_keyboard(user_id)
    )

async def show_achievements(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = update.effective_user.id
    
    # –ü–æ–∫–∞ —á—Ç–æ –±–∞–∑–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    achievements_text = (
        f"üèÜ <b>–í–ê–®–ò –î–û–°–¢–ò–ñ–ï–ù–ò–Ø</b>\n\n"
        f"üìä –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö.\n\n"
        f"–ü–æ–∫–∞ —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö –∏–≥—Ä –≤ —Ä–∞–∑–¥–µ–ª–µ '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'."
    )
    
    await update.message.reply_text(
        achievements_text,
        parse_mode="HTML",
        reply_markup=get_contextual_main_keyboard(user_id)
    )

def get_role_text(role) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏"""
    role_texts = {
        'player': 'üîç –ò–≥—Ä–æ–∫',
        'driver': 'üöó –í–æ–¥–∏—Ç–µ–ª—å',
        'observer': 'üëÅ –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å'
    }
    return role_texts.get(role.value if hasattr(role, 'value') else str(role), str(role))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
text_message_handler = MessageHandler(
    filters.TEXT & ~filters.COMMAND,
    handle_text_message
) 