from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, Contact
from telegram.ext import ContextTypes, ConversationHandler
from loguru import logger
import os

from src.models.base import get_db
from src.models.user import User, UserRole
from src.services.user_service import UserService
from src.services.settings_service import SettingsService
from src.keyboards import (
    get_phone_keyboard, 
    get_district_keyboard, 
    get_role_keyboard, 
    get_confirmation_keyboard,
    get_main_keyboard,
    get_contextual_main_keyboard,
    remove_keyboard
)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è FSM —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
ENTER_NAME, ENTER_PHONE, ENTER_DISTRICT, ENTER_ROLE, CONFIRM_RULES = range(5)

async def start_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞, –Ω–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    user = update.effective_user
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} ({user.username}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    db_generator = get_db()
    db = next(db_generator)
    
    db_user = db.query(User).filter(User.telegram_id == user.id).first()
    
    if db_user:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
        
        welcome_text = (
            f"üéâ <b>–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {db_user.name}!</b>\n\n"
            f"üè† –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ PRYATON.\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
        )
        
        await update.message.reply_text(
            welcome_text,
            reply_markup=get_contextual_main_keyboard(user.id),
            parse_mode="HTML"
        )
        return ConversationHandler.END
    
    # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –Ω–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    welcome_text = (
        f"üëã <b>–ü—Ä–∏–≤–µ—Ç, {user.first_name}!</b>\n\n"
        f"üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞ <b>PRYATON</b>.\n\n"
        f"–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–º –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∞—Å –≤ —Å–∏—Å—Ç–µ–º–µ.\n\n"
        f"üìù <b>–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?</b>\n"
        f"(–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ –Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω –¥—Ä—É–≥–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º)"
    )
    
    await update.message.reply_text(
        welcome_text,
        parse_mode="HTML"
    )
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è ConversationHandler
    return ENTER_NAME

async def process_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = update.effective_user
    name = update.message.text
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∏–º–µ–Ω–∏
    if len(name.strip()) < 2:
        await update.message.reply_text(
            "‚ùå –ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:"
        )
        return ENTER_NAME
    
    if len(name) > 50:
        await update.message.reply_text(
            "‚ùå –ò–º—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:"
        )
        return ENTER_NAME
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    context.user_data["name"] = name.strip()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –≤–≤–µ–ª –∏–º—è: {name}")
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    phone_text = (
        f"‚úÖ <b>–û—Ç–ª–∏—á–Ω–æ, {name}!</b>\n\n"
        f"üì± <b>–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>\n"
        f"–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥."
    )
    
    await update.message.reply_text(
        phone_text,
        reply_markup=get_phone_keyboard(),
        parse_mode="HTML"
    )
    
    return ENTER_PHONE

async def process_phone(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    user = update.effective_user
    
    if update.message.contact:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–µ–ª–∏–ª—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º
        phone = update.message.contact.phone_number
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –ø–æ–¥–µ–ª–∏–ª—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}")
        success_text = "‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–ª—É—á–µ–Ω!"
    elif update.message.text == "‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–ø—É—Å—Ç–∏–ª –≤–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        phone = None
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –ø—Ä–æ–ø—É—Å—Ç–∏–ª –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
        success_text = "‚è≠ –¢–µ–ª–µ—Ñ–æ–Ω –ø—Ä–æ–ø—É—â–µ–Ω"
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é
        phone = update.message.text
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –≤–≤–µ–ª –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}")
        success_text = "‚úÖ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    context.user_data["phone"] = phone
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–π–æ–Ω
    district_text = (
        f"{success_text}\n\n"
        f"üìç <b>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ä–∞–π–æ–Ω</b>\n"
        f"–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ø–æ–¥–±–∏—Ä–∞—Ç—å –∏–≥—Ä—ã –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è –≤–∞—Å –º–µ—Å—Ç–µ:"
    )
    
    await update.message.reply_text(
        district_text,
        reply_markup=get_district_keyboard(),
        parse_mode="HTML"
    )
    
    return ENTER_DISTRICT

async def process_district(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–∞–π–æ–Ω–∞"""
    user = update.effective_user
    district = update.message.text
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±—Ä–∞–Ω –≤–∞–ª–∏–¥–Ω—ã–π —Ä–∞–π–æ–Ω
    available_districts = SettingsService.get_districts()
    if district not in available_districts:
        await update.message.reply_text(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞:",
            reply_markup=get_district_keyboard()
        )
        return ENTER_DISTRICT
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞–π–æ–Ω –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    context.user_data["district"] = district
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –≤—ã–±—Ä–∞–ª —Ä–∞–π–æ–Ω: {district}")
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    role_text = (
        f"‚úÖ <b>–†–∞–π–æ–Ω: {district}</b>\n\n"
        f"üé≠ <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</b>\n"
        f"–≠—Ç–æ –≤–∞—à–∞ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º–∞—è —Ä–æ–ª—å –≤ –∏–≥—Ä–∞—Ö:\n\n"
        f"üîç <b>–ò–≥—Ä–æ–∫</b> - –∏—â–µ—Ç —Å–ø—Ä—è—Ç–∞–≤—à–µ–≥–æ—Å—è –≤–æ–¥–∏—Ç–µ–ª—è\n"
        f"üöó <b>–í–æ–¥–∏—Ç–µ–ª—å</b> - –ø—Ä—è—á–µ—Ç—Å—è –æ—Ç –∏–≥—Ä–æ–∫–æ–≤\n"
        f"üëÅ <b>–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å</b> - –Ω–∞–±–ª—é–¥–∞–µ—Ç –∑–∞ –∏–≥—Ä–æ–π"
    )
    
    await update.message.reply_text(
        role_text,
        reply_markup=get_role_keyboard(),
        parse_mode="HTML"
    )
    
    return ENTER_ROLE

async def process_role(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
    user = update.effective_user
    role_text = update.message.text
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç —Ä–æ–ª–∏ –≤ enum
    role_mapping = {
        "–ò–≥—Ä–æ–∫": UserRole.PLAYER,
        "–í–æ–¥–∏—Ç–µ–ª—å": UserRole.DRIVER,
        "–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å": UserRole.OBSERVER
    }
    
    role = role_mapping.get(role_text, None)
    
    if role is None:
        await update.message.reply_text(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞:",
            reply_markup=get_role_keyboard()
        )
        return ENTER_ROLE
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–æ–ª—å –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    context.user_data["role"] = role
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –≤—ã–±—Ä–∞–ª —Ä–æ–ª—å: {role}")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª–∞ –∏–∑ SettingsService –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    rules = SettingsService.get_game_rules()
    rules_text = (
        f"‚úÖ <b>–†–æ–ª—å: {role_text}</b>\n\n"
        f"üìã <b>–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã PRYATON</b>\n\n"
        f"{rules}\n\n"
        f"‚ö†Ô∏è <b>–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª–∞:</b>"
    )
    
    await update.message.reply_text(
        rules_text,
        reply_markup=get_confirmation_keyboard(),
        parse_mode="HTML"
    )
    
    return CONFIRM_RULES

async def process_rules_confirmation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª"""
    user = update.effective_user
    confirmation = update.message.text
    
    if confirmation != "‚úÖ –î–∞, —Å–æ–≥–ª–∞—Å–µ–Ω —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏":
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –Ω–µ —Å–æ–≥–ª–∞—Å–∏–ª—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏")
        
        reject_text = (
            "‚ùå <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞</b>\n\n"
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –±–µ–∑ —Å–æ–≥–ª–∞—Å–∏—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏.\n\n"
            "–ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ, –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
        )
        
        await update.message.reply_text(
            reject_text,
            reply_markup=remove_keyboard(),
            parse_mode="HTML"
        )
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
        context.user_data.clear()
        
        return ConversationHandler.END
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–∏–ª—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} —Å–æ–≥–ª–∞—Å–∏–ª—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    name = context.user_data.get("name")
    phone = context.user_data.get("phone") 
    district = context.user_data.get("district")
    role = context.user_data.get("role")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    success = UserService.create_user(
        telegram_id=user.id,
        name=name,
        username=user.username,
        phone=phone,
        district=district,
        default_role=role
    )
    
    if not success:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.",
            reply_markup=remove_keyboard()
        )
        return ConversationHandler.END
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    context.user_data.clear()
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    success_text = (
        f"üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π!</b>\n\n"
        f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ —Å–∏—Å—Ç–µ–º–µ PRYATON.\n\n"
        f"üéÆ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        f"‚Ä¢ –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –∏–≥—Ä—ã\n"
        f"‚Ä¢ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∏–≥—Ä–∞—Ö –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏\n"
        f"‚Ä¢ –û–±—â–∞—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏\n\n"
        f"üè† –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏!"
    )
    
    await update.message.reply_text(
        success_text,
        reply_markup=get_contextual_main_keyboard(user.id),
        parse_mode="HTML"
    )
    
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞"""
    user = update.effective_user
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –æ—Ç–º–µ–Ω–∏–ª —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é")
    
    cancel_text = (
        "‚ùå <b>–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞</b>\n\n"
        "–ù–∞–∂–º–∏—Ç–µ üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –Ω–∞—á–∞–ª—É."
    )
    
    await update.message.reply_text(
        cancel_text,
        reply_markup=remove_keyboard(),
        parse_mode="HTML"
    )
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    context.user_data.clear()
    
    return ConversationHandler.END 