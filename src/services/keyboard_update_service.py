from loguru import logger
import asyncio
from typing import List
from telegram import Bot

from src.models.base import get_db
from src.models.user import User
from src.models.game import Game, GameParticipant
from src.keyboards.reply import get_contextual_main_keyboard

class KeyboardUpdateService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã"""
    
    @staticmethod
    def schedule_keyboard_updates_for_game(game_id: int) -> None:
        """–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –∏–≥—Ä—ã"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–≥—Ä—ã
            db_generator = get_db()
            db = next(db_generator)
            
            participants = db.query(GameParticipant)\
                .filter(GameParticipant.game_id == game_id)\
                .all()
            
            if not participants:
                logger.warning(f"–ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –≤ –∏–≥—Ä–µ {game_id}")
                return
            
            user_ids = []
            for participant in participants:
                user = db.query(User).filter(User.id == participant.user_id).first()
                if user and user.telegram_id:
                    user_ids.append(user.telegram_id)
            
            if user_ids:
                # –°–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –∑–∞–¥–∞—á—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
                asyncio.create_task(KeyboardUpdateService._send_keyboard_updates(user_ids))
                logger.info(f"–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è {len(user_ids)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–≥—Ä—ã {game_id}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è –∏–≥—Ä—ã {game_id}: {e}")
    
    @staticmethod
    async def _send_keyboard_updates(user_ids: List[int]) -> None:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–æ—Ç–∞
            from main import TOKEN
            bot = Bot(token=TOKEN)
            
            for user_id in user_ids:
                try:
                    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    keyboard = get_contextual_main_keyboard(user_id)
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
                    await bot.send_message(
                        chat_id=user_id,
                        text="üîÑ <b>–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∞ —Å—Ç–∞—Ç—É—Å!</b>\n\n–û–±–Ω–æ–≤–ª—è–µ–º –≤–∞—à—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–≥—Ä–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º.",
                        reply_markup=keyboard,
                        parse_mode="HTML"
                    )
                    
                    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                    await asyncio.sleep(0.1)
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
            
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä {len(user_ids)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä: {e}") 