from sqlalchemy.orm import Session
from typing import List, Optional
import json
import os
from loguru import logger

from src.models.base import get_db
from src.models.settings import District, Role, GameRule

class SettingsService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã"""
    
    @staticmethod
    def _get_or_create_default_districts() -> None:
        """–°–æ–∑–¥–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Ä–∞–π–æ–Ω—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç –≤ –ë–î"""
        db_generator = get_db()
        db = next(db_generator)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ä–∞–π–æ–Ω—ã –≤ –ë–î
        if db.query(District).count() == 0:
            default_districts = [
             "–¢–µ—Å—Ç–æ–≤—ã–π —Ä–∞–π–æ–Ω"
            ]
            
            for district_name in default_districts:
                district = District(name=district_name, is_active=True)
                db.add(district)
            
            db.commit()
            logger.info(f"–°–æ–∑–¥–∞–Ω—ã –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Ä–∞–π–æ–Ω—ã: {len(default_districts)} —à—Ç.")
    
    @staticmethod
    def _get_or_create_default_roles() -> None:
        """–°–æ–∑–¥–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Ä–æ–ª–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç –≤ –ë–î"""
        db_generator = get_db()
        db = next(db_generator)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ä–æ–ª–∏ –≤ –ë–î
        if db.query(Role).count() == 0:
            default_roles = ["–ò–≥—Ä–æ–∫", "–í–æ–¥–∏—Ç–µ–ª—å", "–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å"]
            
            for role_name in default_roles:
                role = Role(name=role_name, is_active=True)
                db.add(role)
            
            db.commit()
            logger.info(f"–°–æ–∑–¥–∞–Ω—ã –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Ä–æ–ª–∏: {len(default_roles)} —à—Ç.")
    
    @staticmethod
    def _get_or_create_default_rules() -> None:
        """–°–æ–∑–¥–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç –≤ –ë–î"""
        db_generator = get_db()
        db = next(db_generator)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø—Ä–∞–≤–∏–ª–∞ –≤ –ë–î
        if db.query(GameRule).filter(GameRule.is_active == True).count() == 0:
            default_rules = """
üéÆ <b>–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã PRYATON</b>

<b>–û–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä—ã:</b>
PRYATON - —ç—Ç–æ –∏–≥—Ä–∞ –≤ –ø—Ä—è—Ç–∫–∏ –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö, –≥–¥–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–æ–≤ (–≤–æ–¥–∏—Ç–µ–ª–∏) –ø—Ä—è—á—É—Ç—Å—è –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–∞–π–æ–Ω–µ, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ (–∏—Å–∫–∞—Ç–µ–ª–∏) –ø—ã—Ç–∞—é—Ç—Å—è –∏—Ö –Ω–∞–π—Ç–∏.

<b>–ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π:</b>
‚Ä¢ –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Ä–æ–ª—å –≤–æ–¥–∏—Ç–µ–ª—è —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∏–ª–∏ –ø–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
‚Ä¢ –í–∞—à–∞ –∑–∞–¥–∞—á–∞ - —Å–ø—Ä—è—Ç–∞—Ç—å—Å—è –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–∞–π–æ–Ω–µ –∏ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –Ω–µ–∑–∞–º–µ—á–µ–Ω–Ω—ã–º–∏
‚Ä¢ –í—Ä–µ–º—è –Ω–∞ –ø—Ä—è—Ç–∫–∏ - 30 –º–∏–Ω—É—Ç —Å –º–æ–º–µ–Ω—Ç–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
‚Ä¢ –í—ã –¥–æ–ª–∂–Ω—ã –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–∞–π–æ–Ω–∞
‚Ä¢ –ü—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ —á–µ—Å—Ç–Ω–æ —Å–æ–æ–±—â–∏—Ç—å –æ–± —ç—Ç–æ–º

<b>–ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –∏—Å–∫–∞—Ç–µ–ª–µ–π:</b>
‚Ä¢ –í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –Ω–∞–π—Ç–∏ —Å–ø—Ä—è—Ç–∞–≤—à–∏—Ö—Å—è –≤–æ–¥–∏—Ç–µ–ª–µ–π
‚Ä¢ –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–º–µ—â–∞—Ç—å—Å—è –ø–æ —Ä–∞–π–æ–Ω—É –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ
‚Ä¢ –ü—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ —Å–¥–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –≤ –±–æ—Ç
‚Ä¢ –ó–∞–ø—Ä–µ—â–µ–Ω–æ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞

<b>–û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞:</b>
‚Ä¢ –°–æ–±–ª—é–¥–∞–π—Ç–µ –ü–î–î –∏ –±—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –Ω–∞ –¥–æ—Ä–æ–≥–µ
‚Ä¢ –ò–≥—Ä–∞ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö
‚Ä¢ –ó–∞–ø—Ä–µ—â–µ–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–ø–∞—Å–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏
‚Ä¢ –£–≤–∞–∂–∞–π—Ç–µ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –ø—Ä–æ—Ö–æ–∂–∏—Ö
‚Ä¢ –í —Å–ª—É—á–∞–µ —Å–ø–æ—Ä–æ–≤ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä

<b>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å:</b>
–£—á–∞—Å—Ç–≤—É—è –≤ –∏–≥—Ä–µ, –≤—ã –±–µ—Ä–µ—Ç–µ –Ω–∞ —Å–µ–±—è –ø–æ–ª–Ω—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Å–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è. –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã –Ω–µ –Ω–µ—Å—É—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ª—é–±—ã–µ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è.

–ù–∞–∂–∏–º–∞—è "–î–∞, —Å–æ–≥–ª–∞—Å–µ–Ω —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏", –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –ø—Ä–æ—á–∏—Ç–∞–ª–∏ –∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏–≥—Ä—ã.
            """
            
            rule = GameRule(content=default_rules.strip(), version=1, is_active=True)
            db.add(rule)
            db.commit()
            logger.info("–°–æ–∑–¥–∞–Ω—ã –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã")
    
    @staticmethod
    def get_districts() -> List[str]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–∞–π–æ–Ω–æ–≤"""
        SettingsService._get_or_create_default_districts()
        
        db_generator = get_db()
        db = next(db_generator)
        
        districts = db.query(District).filter(District.is_active == True).order_by(District.name).all()
        return [district.name for district in districts]
    
    @staticmethod
    def get_all_districts() -> List[District]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–∞–π–æ–Ω–æ–≤ (–≤–∫–ª—é—á–∞—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ)"""
        SettingsService._get_or_create_default_districts()
        
        db_generator = get_db()
        db = next(db_generator)
        
        return db.query(District).order_by(District.name).all()
    
    @staticmethod
    def get_available_roles() -> List[str]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–æ–ª–µ–π"""
        SettingsService._get_or_create_default_roles()
        
        db_generator = get_db()
        db = next(db_generator)
        
        roles = db.query(Role).filter(Role.is_active == True).order_by(Role.name).all()
        return [role.name for role in roles]
    
    @staticmethod
    def get_all_roles() -> List[Role]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ–ª–µ–π (–≤–∫–ª—é—á–∞—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ)"""
        SettingsService._get_or_create_default_roles()
        
        db_generator = get_db()
        db = next(db_generator)
        
        return db.query(Role).order_by(Role.name).all()
    
    @staticmethod
    def get_game_rules() -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã"""
        SettingsService._get_or_create_default_rules()
        
        db_generator = get_db()
        db = next(db_generator)
        
        rule = db.query(GameRule).filter(GameRule.is_active == True).order_by(GameRule.version.desc()).first()
        return rule.content if rule else "–ü—Ä–∞–≤–∏–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    
    @staticmethod
    def update_game_rules(new_rules: str) -> bool:
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã"""
        try:
            db_generator = get_db()
            db = next(db_generator)
            
            # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–∞–≤–∏–ª–∞
            db.query(GameRule).update({GameRule.is_active: False})
            
            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
            last_version = db.query(GameRule).order_by(GameRule.version.desc()).first()
            new_version = (last_version.version + 1) if last_version else 1
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞
            new_rule = GameRule(content=new_rules, version=new_version, is_active=True)
            db.add(new_rule)
            db.commit()
            
            logger.info(f"–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–æ –≤–µ—Ä—Å–∏–∏ {new_version}")
            return True
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª: {e}")
            return False
    
    @staticmethod
    def add_district(district_name: str, description: Optional[str] = None) -> bool:
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–∞–π–æ–Ω–∞"""
        try:
            db_generator = get_db()
            db = next(db_generator)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —Ä–∞–π–æ–Ω
            existing = db.query(District).filter(District.name == district_name).first()
            if existing:
                if not existing.is_active:
                    # –†–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–∞–π–æ–Ω
                    existing.is_active = True
                    existing.description = description
                    db.commit()
                    logger.info(f"–†–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Ä–∞–π–æ–Ω: {district_name}")
                    return True
                else:
                    logger.warning(f"–†–∞–π–æ–Ω {district_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    return False
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞–π–æ–Ω
            district = District(name=district_name, description=description, is_active=True)
            db.add(district)
            db.commit()
            
            logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ä–∞–π–æ–Ω: {district_name}")
            return True
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–∞–π–æ–Ω–∞: {e}")
            return False
    
    @staticmethod
    def remove_district(district_name: str) -> bool:
        """–î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–∞–π–æ–Ω–∞"""
        try:
            db_generator = get_db()
            db = next(db_generator)
            
            district = db.query(District).filter(District.name == district_name).first()
            if not district:
                logger.warning(f"–†–∞–π–æ–Ω {district_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
            
            district.is_active = False
            db.commit()
            
            logger.info(f"–†–∞–π–æ–Ω {district_name} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
            return True
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–∞–π–æ–Ω–∞: {e}")
            return False
    
    @staticmethod
    def add_role(role_name: str, description: Optional[str] = None) -> bool:
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–æ–ª–∏"""
        try:
            db_generator = get_db()
            db = next(db_generator)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è —Ä–æ–ª—å
            existing = db.query(Role).filter(Role.name == role_name).first()
            if existing:
                if not existing.is_active:
                    # –†–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—É—é —Ä–æ–ª—å
                    existing.is_active = True
                    existing.description = description
                    db.commit()
                    logger.info(f"–†–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ —Ä–æ–ª—å: {role_name}")
                    return True
                else:
                    logger.warning(f"–†–æ–ª—å {role_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    return False
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ä–æ–ª—å
            role = Role(name=role_name, description=description, is_active=True)
            db.add(role)
            db.commit()
            
            logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å: {role_name}")
            return True
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏: {e}")
            return False
    
    @staticmethod
    def remove_role(role_name: str) -> bool:
        """–î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–æ–ª–∏"""
        try:
            db_generator = get_db()
            db = next(db_generator)
            
            role = db.query(Role).filter(Role.name == role_name).first()
            if not role:
                logger.warning(f"–†–æ–ª—å {role_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False
            
            role.is_active = False
            db.commit()
            
            logger.info(f"–†–æ–ª—å {role_name} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
            return True
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–æ–ª–∏: {e}")
            return False 