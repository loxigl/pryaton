#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º –∏ timezone
PRYTON v2 - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å–æ–±—ã—Ç–∏–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
"""

import asyncio
import sys
import os
from datetime import datetime, timedelta
import pytz

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src.services.enhanced_scheduler_service import EnhancedSchedulerService, DEFAULT_TIMEZONE
from src.services.event_persistence_service import EventPersistenceService

async def test_scheduler_timezone_fix():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —Å timezone"""
    print("üïê –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê –° TIMEZONE")
    print("=" * 50)
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º Application –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    class MockApplication:
        class MockBot:
            pass
        bot = MockBot()
    
    app = MockApplication()
    scheduler = EnhancedSchedulerService(app)
    
    print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    print(f"üåç –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞: {DEFAULT_TIMEZONE}")
    print(f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {datetime.now(DEFAULT_TIMEZONE)}")
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –≤—Ä–µ–º–µ–Ω–∏
    print("\nüìã –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ timezone –∏ —Ñ–æ—Ä–º–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏")
    print("-" * 30)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —Å timezone
        assert scheduler.scheduler.timezone == DEFAULT_TIMEZONE
        print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω–æ–π")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω
        scheduler.start()
        print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        jobs_count = len(scheduler.scheduler.get_jobs())
        print(f"üìä –ó–∞–¥–∞—á –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ: {jobs_count}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ 
        tomorrow = datetime.now(DEFAULT_TIMEZONE) + timedelta(hours=24)
        print(f"üìÖ –¢–µ—Å—Ç–æ–≤–æ–µ –≤—Ä–µ–º—è –∏–≥—Ä—ã: {tomorrow}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∏
        test_time = datetime.now(DEFAULT_TIMEZONE) + timedelta(seconds=5)
        
        def test_job():
            print("üîî –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        
        scheduler.scheduler.add_job(
            test_job,
            trigger='date',
            run_date=test_time,
            id='test_job'
        )
        
        new_jobs_count = len(scheduler.scheduler.get_jobs())
        print(f"üìä –ó–∞–¥–∞—á –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {new_jobs_count}")
        
        if new_jobs_count > jobs_count:
            print("‚úÖ –ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫")
        else:
            print("‚ö†Ô∏è –ó–∞–¥–∞—á–∞ –Ω–µ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ 1: {e}")
        return
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
    print("\nüìã –¢–ï–°–¢ 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–æ–Ω")
    print("-" * 30)
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –≤—Ä–µ–º–µ–Ω–∏
        naive_time = datetime.now()
        aware_time = datetime.now(DEFAULT_TIMEZONE)
        
        print(f"‚è∞ Naive –≤—Ä–µ–º—è: {naive_time} (timezone: {naive_time.tzinfo})")
        print(f"‚è∞ Aware –≤—Ä–µ–º—è: {aware_time} (timezone: {aware_time.tzinfo})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ä–µ–º—è
        if aware_time.tzinfo == DEFAULT_TIMEZONE:
            print("‚úÖ Aware –≤—Ä–µ–º—è –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é timezone")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å aware –≤—Ä–µ–º–µ–Ω–µ–º")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é naive –≤—Ä–µ–º–µ–Ω–∏
        localized_time = DEFAULT_TIMEZONE.localize(naive_time)
        print(f"‚è∞ –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è: {localized_time}")
        
        if localized_time.tzinfo == DEFAULT_TIMEZONE:
            print("‚úÖ Naive –≤—Ä–µ–º—è —É—Å–ø–µ—à–Ω–æ –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–æ")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π –≤—Ä–µ–º–µ–Ω–∏")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ 2: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    print("\nüìã –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞")
    print("-" * 30)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–±—ã—Ç–∏—è—Ö
        try:
            events_info = scheduler.get_scheduled_events_info()
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è get_scheduled_events_info() —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞: {list(events_info.keys())}")
        except Exception as e:
            print(f"‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è get_scheduled_events_info() –≤—ã–∑–≤–∞–ª–∞ –æ—à–∏–±–∫—É: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–º–µ–Ω—ã –∑–∞–¥–∞—á
        try:
            scheduler.cancel_game_jobs(9999)  # –¢–µ—Å—Ç–æ–≤—ã–π ID
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è cancel_game_jobs() —Ä–∞–±–æ—Ç–∞–µ—Ç")
        except Exception as e:
            print(f"‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è cancel_game_jobs() –≤—ã–∑–≤–∞–ª–∞ –æ—à–∏–±–∫—É: {e}")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–¥–∞—á–∏ –º–æ–∂–Ω–æ —É–¥–∞–ª—è—Ç—å
        jobs_before = len(scheduler.scheduler.get_jobs())
        if jobs_before > 0:
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
            try:
                scheduler.scheduler.remove_job('test_job')
                jobs_after = len(scheduler.scheduler.get_jobs())
                print(f"üìä –ó–∞–¥–∞—á –¥–æ —É–¥–∞–ª–µ–Ω–∏—è: {jobs_before}, –ø–æ—Å–ª–µ: {jobs_after}")
                if jobs_after < jobs_before:
                    print("‚úÖ –ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏: {e}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ 3: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    print("\nüìã –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞")
    print("-" * 30)
    
    try:
        print(f"‚è∞ –í—Ä–µ–º—è –ø—Ä—è—Ç–∫–∏: {scheduler.hiding_time} –º–∏–Ω—É—Ç")
        print(f"üîî –í—Ä–µ–º–µ–Ω–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: {scheduler.reminder_times} –º–∏–Ω—É—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã
        if isinstance(scheduler.hiding_time, int) and scheduler.hiding_time > 0:
            print("‚úÖ –í—Ä–µ–º—è –ø—Ä—è—Ç–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –≤—Ä–µ–º–µ–Ω–µ–º –ø—Ä—è—Ç–∫–∏")
            
        if isinstance(scheduler.reminder_times, list) and len(scheduler.reminder_times) > 0:
            print("‚úÖ –í—Ä–µ–º–µ–Ω–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –≤—Ä–µ–º–µ–Ω–∞–º–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ 4: {e}")
    
    # –û—á–∏—Å—Ç–∫–∞
    try:
        scheduler.shutdown()
        print("\nüîß –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
    print("üí° –û—Å–Ω–æ–≤–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
    print("   - –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ timezone (Moscow)")
    print("   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω DateTrigger —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º")
    print("   - –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π")
    print("   - –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏")
    print("   - –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å—Ç–∞–±–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å timezone")

if __name__ == "__main__":
    asyncio.run(test_scheduler_timezone_fix()) 