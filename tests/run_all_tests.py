#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ PRYTON v2 —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –æ—Ç—á—ë—Ç–∞
–ü–æ–∫—Ä—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
"""

import subprocess
import sys
import os
from datetime import datetime


def print_header(title):
    """–ü–µ—á–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–µ–∫—Ü–∏–∏"""
    print("\n" + "=" * 60)
    print(f"  {title}")
    print("=" * 60)


def print_section(title):
    """–ü–µ—á–∞—Ç—å –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞"""
    print(f"\nüìã {title}")
    print("-" * 40)


def run_test_file(test_file, description):
    """–ó–∞–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Ç–µ—Å—Ç–æ–≤"""
    print(f"\nüîÑ –ó–∞–ø—É—Å–∫: {description}")
    print(f"   –§–∞–π–ª: {test_file}")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
        result = subprocess.run([
            sys.executable, "-m", "pytest", 
            test_file, 
            "-v", "-s", "--tb=short"
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print(f"‚úÖ {description} - –ü–†–û–ô–î–ï–ù–´")
            return True, result.stdout
        else:
            print(f"‚ùå {description} - –ü–†–û–í–ê–õ–ï–ù–´")
            print(f"–û—à–∏–±–∫–∏:\n{result.stderr}")
            return False, result.stderr
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ {test_file}: {e}")
        return False, str(e)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤"""
    start_time = datetime.now()
    
    print_header("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï PRYTON v2 - –ü–û–õ–ù–´–ô –ò–ì–†–û–í–û–ô –ü–†–û–¶–ï–°–°")
    print(f"üïê –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {start_time.strftime('%d.%m.%Y %H:%M:%S')}")
    
    # –°–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    test_suites = [
        {
            "file": "tests/test_full_game_process.py",
            "name": "–ü–æ–ª–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å",
            "description": "–¢–µ—Å—Ç—ã –æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã"
        },
        {
            "file": "tests/test_game_completion_flow.py", 
            "name": "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
            "description": "–¢–µ—Å—Ç—ã –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
        },
        {
            "file": "tests/test_scheduler_notifications.py",
            "name": "–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
            "description": "–¢–µ—Å—Ç—ã —Å–∏—Å—Ç–µ–º—ã –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
        }
    ]
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
    results = []
    total_tests = 0
    passed_tests = 0
    
    print_section("–ü–õ–ê–ù –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    for i, suite in enumerate(test_suites, 1):
        print(f"{i}. {suite['name']}")
        print(f"   üìù {suite['description']}")
        print(f"   üìÅ {suite['file']}")
    
    print_section("–í–´–ü–û–õ–ù–ï–ù–ò–ï –¢–ï–°–¢–û–í")
    
    for suite in test_suites:
        success, output = run_test_file(suite["file"], suite["name"])
        results.append({
            "name": suite["name"],
            "success": success,
            "output": output
        })
        
        if success:
            passed_tests += 1
        total_tests += 1
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç
    end_time = datetime.now()
    duration = end_time - start_time
    
    print_header("–ò–¢–û–ì–û–í–´–ô –û–¢–ß–Å–¢")
    
    print_section("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û –ù–ê–ë–û–†–ê–ú –¢–ï–°–¢–û–í")
    for result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result["success"] else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"{status} - {result['name']}")
    
    print_section("–û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print(f"üìä –í—Å–µ–≥–æ –Ω–∞–±–æ—Ä–æ–≤ —Ç–µ—Å—Ç–æ–≤: {total_tests}")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–æ: {passed_tests}")
    print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {total_tests - passed_tests}")
    print(f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(passed_tests/total_tests)*100:.1f}%")
    print(f"‚è± –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {duration.total_seconds():.2f} —Å–µ–∫—É–Ω–¥")
    
    print_section("–ü–û–ö–†–´–¢–ò–ï –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò")
    print("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
    print("‚úÖ –ó–∞–ø–∏—Å—å/–æ—Ç–º–µ–Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
    print("‚úÖ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π")
    print("‚úÖ –ó–∞–ø—É—Å–∫ –∏ –æ—Ç–º–µ–Ω–∞ –∏–≥—Ä")
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á")
    print("‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä")
    print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫")
    print("‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
    
    print_section("–ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–ù–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´")
    print("üéÆ src/handlers/games.py - –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–≥—Ä")
    print("üîß src/services/game_service.py - –°–µ—Ä–≤–∏—Å—ã –∏–≥—Ä")
    print("üë§ src/handlers/admin.py - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏")
    print("‚è∞ src/services/scheduler_service.py - –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫")
    print("üîî src/handlers/callback_handler.py - –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä")
    print("üì± –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤")
    print("üîå Telegram Bot API")
    
    if passed_tests == total_tests:
        print_section("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("–ò–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å PRYTON v2 —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É")
        return True
    else:
        print_section("‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫ –≤—ã—à–µ")
        print("–¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ —Ä–µ–ª–∏–∑–æ–º")
        return False


if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 