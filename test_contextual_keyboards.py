#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä PRYTON v2 –≠—Ç–∞–ø 1.4
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π...")
    
    try:
        from src.services.user_context_service import UserContextService, UserGameContext
        print("‚úÖ UserContextService –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ UserContextService: {e}")
        return False
    
    try:
        from src.services.dynamic_keyboard_service import DynamicKeyboardService
        print("‚úÖ DynamicKeyboardService –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ DynamicKeyboardService: {e}")
        return False
    
    try:
        from src.handlers.contextual_actions import (
            handle_my_game_button,
            handle_game_status_button,
            handle_send_location_button,
            handle_game_results_button
        )
        print("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {e}")
        return False
    
    try:
        from src.keyboards.reply import get_contextual_main_keyboard
        print("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä: {e}")
        return False
    
    return True

def test_context_service():
    """–¢–µ—Å—Ç UserContextService –±–µ–∑ –ë–î"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UserContextService...")
    
    try:
        from src.services.user_context_service import UserContextService
        
        # –¢–µ—Å—Ç —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º - –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å STATUS_NORMAL
        context = UserContextService.get_user_game_context(999999)
        if context.status == UserContextService.STATUS_NORMAL:
            print("‚úÖ get_user_game_context –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç STATUS_NORMAL –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {context.status}")
            return False
            
        print(f"‚úÖ UserGameContext —Å–æ–∑–¥–∞–Ω: {context}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ UserContextService: {e}")
        return False

def test_keyboard_service():
    """–¢–µ—Å—Ç DynamicKeyboardService –±–µ–∑ –ë–î"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DynamicKeyboardService...")
    
    try:
        from src.services.dynamic_keyboard_service import DynamicKeyboardService
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        keyboard = DynamicKeyboardService.get_contextual_main_keyboard(999999)
        
        if keyboard and hasattr(keyboard, 'keyboard'):
            print("‚úÖ get_contextual_main_keyboard —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—è–¥–æ–≤ –∫–Ω–æ–ø–æ–∫: {len(keyboard.keyboard)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
            found_main_menu = False
            for row in keyboard.keyboard:
                for button in row:
                    if "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" in button.text:
                        found_main_menu = True
                        break
            
            if found_main_menu:
                print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ")
            else:
                print("‚ùå –ö–Ω–æ–ø–∫–∞ '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False
                
            return True
        else:
            print("‚ùå –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ DynamicKeyboardService: {e}")
        return False

def test_keyboard_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å reply keyboards"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä...")
    
    try:
        from src.keyboards.reply import get_contextual_main_keyboard
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        keyboard = get_contextual_main_keyboard(999999)
        
        if keyboard:
            print("‚úÖ get_contextual_main_keyboard —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print("‚ùå get_contextual_main_keyboard –≤–µ—Ä–Ω—É–ª–∞ None")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä: {e}")
        return False

def test_status_constants():
    """–¢–µ—Å—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç —Å—Ç–∞—Ç—É—Å–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç —Å—Ç–∞—Ç—É—Å–æ–≤...")
    
    try:
        from src.services.user_context_service import UserContextService
        
        expected_statuses = ["normal", "registered", "in_game", "game_finished"]
        actual_statuses = [
            UserContextService.STATUS_NORMAL,
            UserContextService.STATUS_REGISTERED,
            UserContextService.STATUS_IN_GAME,
            UserContextService.STATUS_GAME_FINISHED
        ]
        
        if actual_statuses == expected_statuses:
            print("‚úÖ –í—Å–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å—Ç–∞—Ç—É—Å–æ–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
            return True
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã: {actual_statuses}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–¢–ï–ö–°–¢–ù–´–• –ö–õ–ê–í–ò–ê–¢–£–† PRYTON v2")
    print("=" * 60)
    
    tests = [
        ("–ò–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π", test_imports),
        ("UserContextService", test_context_service),
        ("DynamicKeyboardService", test_keyboard_service),
        ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä", test_keyboard_integration),
        ("–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å—Ç–∞—Ç—É—Å–æ–≤", test_status_constants)
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\nüìã {test_name}:")
        try:
            if test_func():
                passed += 1
                print(f"‚úÖ {test_name} - –ü–†–û–ô–î–ï–ù")
            else:
                print(f"‚ùå {test_name} - –ü–†–û–í–ê–õ–ï–ù")
        except Exception as e:
            print(f"‚ùå {test_name} - –û–®–ò–ë–ö–ê: {e}")
    
    print("\n" + "=" * 60)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("\n‚úÖ –≠—Ç–∞–ø 1.4 '–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã' –≥–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
        return True
    else:
        print("‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 