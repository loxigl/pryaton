#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
—Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
"""
import sys
import os
sys.path.append('/d/tg_bot/pryaton')

from datetime import datetime, timedelta
from src.models.base import init_db, get_db
from src.models.game import Game, GameStatus, GameParticipant, GameRole
from src.models.user import User
from src.services.game_service import GameService
from src.services.manual_game_control_service import ManualGameControlService
from src.services.user_service import UserService

def setup_test_data():
    """–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    db_generator = get_db()
    db = next(db_generator)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        test_users = []
        for i in range(5):
            user = User(
                telegram_id=f"test_user_{i}",
                name=f"–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {i+1}",
                phone=f"+7900000000{i}",
                district="–¢–µ—Å—Ç–æ–≤—ã–π —Ä–∞–π–æ–Ω"
            )
            db.add(user)
            test_users.append(user)
        
        # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        admin = User(
            telegram_id="admin_test",
            name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
            phone="+79000000099",
            district="–ê–¥–º–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
            is_admin=True
        )
        db.add(admin)
        
        db.commit()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∏–≥—Ä—É
        game = Game(
            district="–¢–µ—Å—Ç–æ–≤—ã–π —Ä–∞–π–æ–Ω",
            max_participants=4,
            max_drivers=2,
            scheduled_at=datetime.now() + timedelta(hours=1),
            creator_id=admin.id,
            status=GameStatus.RECRUITING
        )
        db.add(game)
        db.commit()
        
        return game.id, admin.id, [u.id for u in test_users]
        
    finally:
        db.close()

def test_participant_addition_logic():
    """–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
    print("\nüß™ === –¢–ï–°–¢ –î–û–ë–ê–í–õ–ï–ù–ò–Ø –£–ß–ê–°–¢–ù–ò–ö–û–í ===")
    
    game_id, admin_id, user_ids = setup_test_data()
    
    # –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    for i, user_id in enumerate(user_ids[:3]):
        result = ManualGameControlService.add_participant_to_game(game_id, user_id, admin_id)
        print(f"‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ {i+1}: {'‚úÖ' if result['success'] else '‚ùå'} {result.get('message', result.get('error'))}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏
    control_info = ManualGameControlService.get_game_control_info(game_id)
    if control_info["success"]:
        participants = control_info["participants"]
        drivers = [p for p in participants if p["role"] == "driver"]
        seekers = [p for p in participants if p["role"] == "seeker"]
        
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"   ‚Ä¢ –í–æ–¥–∏—Ç–µ–ª–µ–π: {len(drivers)}")
        print(f"   ‚Ä¢ –ò—Å–∫–∞—Ç–µ–ª–µ–π: {len(seekers)}")
        print(f"   ‚Ä¢ –ë–µ–∑ —Ä–æ–ª–∏: {len([p for p in participants if not p['role']])}")
        
        if len(drivers) == 2 and len(seekers) == 1:
            print("‚úÖ –†–æ–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ–º —Ä–æ–ª–µ–π!")
    
    return game_id, admin_id, user_ids

def test_game_completion_logic():
    """–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã"""
    print("\nüß™ === –¢–ï–°–¢ –õ–û–ì–ò–ö–ò –ó–ê–í–ï–†–®–ï–ù–ò–Ø –ò–ì–†–´ ===")
    
    game_id, admin_id, user_ids = test_participant_addition_logic()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã...")
    start_result = ManualGameControlService.manual_start_hiding_phase(game_id, admin_id)
    print(f"   –ù–∞—á–∞–ª–æ –∏–≥—Ä—ã: {'‚úÖ' if start_result['success'] else '‚ùå'}")
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–∏—Å–∫—É
    search_result = ManualGameControlService.manual_start_searching_phase(game_id, admin_id)
    print(f"   –§–∞–∑–∞ –ø–æ–∏—Å–∫–∞: {'‚úÖ' if search_result['success'] else '‚ùå'}")
    
    # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    control_info = ManualGameControlService.get_game_control_info(game_id)
    if not control_info["success"]:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–µ")
        return
    
    participants = control_info["participants"]
    drivers = [p for p in participants if p["role"] == "driver"]
    
    if len(drivers) < 2:
        print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–¥–∏—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∞")
        return
    
    # –û—Ç–º–µ—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è –∫–∞–∫ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ
    print("üîç –û—Ç–º–µ—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è –∫–∞–∫ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ...")
    mark_result1 = ManualGameControlService.manual_mark_participant_found(
        game_id, drivers[0]["id"], admin_id
    )
    print(f"   –ü–µ—Ä–≤—ã–π –≤–æ–¥–∏—Ç–µ–ª—å: {'‚úÖ' if mark_result1['success'] else '‚ùå'}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã
    game_info = ManualGameControlService.get_game_control_info(game_id)
    if game_info["success"]:
        game_status = game_info["game"]["status"]
        print(f"   –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã: {game_status}")
        
        if game_status != "completed":
            print("‚úÖ –ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ)")
        else:
            print("‚ùå –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Ä–∞–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏!")
    
    # –û—Ç–º–µ—á–∞–µ–º –≤—Ç–æ—Ä–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è –∫–∞–∫ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ
    print("üîç –û—Ç–º–µ—á–∞–µ–º –≤—Ç–æ—Ä–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è –∫–∞–∫ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ...")
    mark_result2 = ManualGameControlService.manual_mark_participant_found(
        game_id, drivers[1]["id"], admin_id
    )
    print(f"   –í—Ç–æ—Ä–æ–π –≤–æ–¥–∏—Ç–µ–ª—å: {'‚úÖ' if mark_result2['success'] else '‚ùå'}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã
    game_info = ManualGameControlService.get_game_control_info(game_id)
    if game_info["success"]:
        game_status = game_info["game"]["status"]
        print(f"   –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã: {game_status}")
        
        if game_status == "completed":
            print("‚úÖ –ò–≥—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        else:
            print("‚ùå –ò–≥—Ä–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")
    
    return game_id, admin_id, drivers

def test_participant_removal_logic():
    """–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
    print("\nüß™ === –¢–ï–°–¢ –£–î–ê–õ–ï–ù–ò–Ø –£–ß–ê–°–¢–ù–ò–ö–û–í ===")
    
    game_id, admin_id, drivers = test_game_completion_logic()
    
    # –û—Ç–º–µ–Ω—è–µ–º –æ—Ç–º–µ—Ç–∫—É –æ–¥–Ω–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è
    print("üîÑ –û—Ç–º–µ–Ω—è–µ–º –æ—Ç–º–µ—Ç–∫—É –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —É –ø–µ—Ä–≤–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è...")
    unmark_result = ManualGameControlService.manual_unmark_participant_found(
        game_id, drivers[0]["id"], admin_id
    )
    print(f"   –û—Ç–º–µ–Ω–∞ –æ—Ç–º–µ—Ç–∫–∏: {'‚úÖ' if unmark_result['success'] else '‚ùå'}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–≥—Ä–∞ –≤–æ–∑–æ–±–Ω–æ–≤–∏–ª–∞—Å—å
    game_info = ManualGameControlService.get_game_control_info(game_id)
    if game_info["success"]:
        game_status = game_info["game"]["status"]
        print(f"   –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã: {game_status}")
        
        if game_status in ["hiding_phase", "searching_phase"]:
            print("‚úÖ –ò–≥—Ä–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        else:
            print("‚ùå –ò–≥—Ä–∞ –Ω–µ –≤–æ–∑–æ–±–Ω–æ–≤–∏–ª–∞—Å—å!")
    
    # –£–¥–∞–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è
    print("üóëÔ∏è –£–¥–∞–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è...")
    remove_result = ManualGameControlService.remove_participant_from_game(
        game_id, drivers[1]["id"], admin_id
    )
    print(f"   –£–¥–∞–ª–µ–Ω–∏–µ: {'‚úÖ' if remove_result['success'] else '‚ùå'}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    final_info = ManualGameControlService.get_game_control_info(game_id)
    if final_info["success"]:
        final_participants = final_info["participants"]
        final_drivers = [p for p in final_participants if p["role"] == "driver"]
        game_status = final_info["game"]["status"]
        
        print(f"üìä –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
        print(f"   ‚Ä¢ –í–æ–¥–∏—Ç–µ–ª–µ–π –æ—Å—Ç–∞–ª–æ—Å—å: {len(final_drivers)}")
        print(f"   ‚Ä¢ –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã: {game_status}")
        
        if len(final_drivers) == 1 and game_status in ["hiding_phase", "searching_phase"]:
            print("‚úÖ –õ–æ–≥–∏–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ - –∏–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è —Å –æ–¥–Ω–∏–º –≤–æ–¥–∏—Ç–µ–ª–µ–º!")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –ª–æ–≥–∏–∫–æ–π –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("üéÆ === –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –õ–û–ì–ò–ö–ò –ò–ì–†–´ ===")
    print("–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –ª–æ–≥–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã")
    print("–ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏/—É–¥–∞–ª–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏—Ö —Å—Ç–∞—Ç—É—Å–∞")
    print()
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
        init_db()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
        test_participant_removal_logic()
        
        print("\n‚úÖ === –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´ ===")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã—à–µ –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 