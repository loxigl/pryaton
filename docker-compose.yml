services:
  # Сервис для Telegram бота
  bot:
    build: .
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
      - ./src:/app/src
      - .:/app
    networks:
      - pryton_network

  # Сервис базы данных PostgreSQL
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-pryton_bot}
      - TZ=Europe/Moscow
      - PGTZ=Europe/Moscow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - pryton_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-pryton_bot}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Сервис для администрирования БД (опционально)
  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks:
      - pryton_network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/rules:/etc/prometheus/rules
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - pryton_network

  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - "9093:9093"
    networks:
      - pryton_network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana 
    networks:
      - pryton_network
    
  loki:
    image: grafana/loki:2.8.2
    command: -config.file=/etc/loki/local-config.yaml
    user: root
    volumes:
      - ./monitoring/loki/local-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
      - ./logs:/var/log/pryton
      - loki_val:/wal
    ports:
      - "3100:3100"
      - "7946:7946"
      - "7946:7946/udp"
    networks:
      - pryton_network

  node_exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - pryton_network

  promtail:
    build: ./monitoring/promtail
    volumes:
      - ./monitoring/promtail/config.yaml:/etc/promtail/config.yaml
      - ./logs:/var/log/pryton  
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - pryton_network

volumes:
  postgres_data:
  grafana_data:
  loki_data:
  loki_val:

networks:
  pryton_network:
    driver: bridge
